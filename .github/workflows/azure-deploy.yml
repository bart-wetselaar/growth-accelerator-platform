name: Deploy to Azure Web App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NAME: growth-accelerator-platform
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  PYTHON_VERSION: '3.11'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python version
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Create and start virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate

    - name: Install dependencies
      run: |
        source venv/bin/activate
        pip install --upgrade pip
        pip install flask flask-login flask-sqlalchemy flask-wtf gunicorn requests sqlalchemy werkzeug psycopg2-binary

    - name: Run self-diagnostic tests
      run: |
        source venv/bin/activate
        python -c "
        try:
            from self_diagnostic import diagnostic_system
            result = diagnostic_system.run_comprehensive_diagnostics()
            print(f'Pre-deployment diagnostics: {result[\"system_status\"]}')
            if result['system_status'] == 'critical':
                print('Warning: Critical issues detected')
            else:
                print('Diagnostics passed')
        except Exception as e:
            print(f'Diagnostic check failed: {e}')
        "

    - name: Upload artifact for deployment jobs
      uses: actions/upload-artifact@v3
      with:
        name: python-app
        path: |
          .
          !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: python-app
        path: .

    - name: 'Deploy to Azure Web App'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Post-deployment health check
      run: |
        sleep 30
        curl -f https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health || echo "Health check failed"
        curl -f https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/azure-status || echo "Azure status check failed"