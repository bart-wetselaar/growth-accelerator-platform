name: Cost-Optimized Azure Web App Deploy

on:
  push:
    branches: [main]
    paths:
      - 'main.py'
      - 'requirements.txt'
      - 'startup.sh'
      - 'web.config'
  workflow_dispatch:

env:
  AZURE_COST_OPTIMIZATION: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.11 (Cost-Optimized)
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Dependencies (Minimal)
      run: |
        python -m pip install --upgrade pip
        
        # Create minimal requirements for production
        cat > requirements-prod.txt << 'EOF'
Flask==3.0.0
gunicorn==21.2.0
requests==2.31.0
python-dotenv==1.0.0
Werkzeug==3.0.1
EOF
        
        pip install -r requirements-prod.txt --no-cache-dir
        
    - name: Create Cost-Optimized Build
      run: |
        echo "ðŸ”§ Creating cost-optimized deployment package..."
        
        # Create minimal deployment package
        mkdir -p cost-optimized-build
        
        # Copy only essential files
        cp main.py cost-optimized-build/ 2>/dev/null || true
        cp startup.sh cost-optimized-build/ 2>/dev/null || true
        cp web.config cost-optimized-build/ 2>/dev/null || true
        cp requirements-prod.txt cost-optimized-build/requirements.txt
        
        # Create optimized dist directory
        mkdir -p cost-optimized-build/dist
        
        # Copy and optimize static content
        if [ -f "index.html" ]; then
          sed 's/>[[:space:]]*</></g' index.html > cost-optimized-build/dist/index.html
        fi
        
        echo "Cost-optimized package created:"
        du -sh cost-optimized-build
        
    - name: Deploy to Azure Web App (Cost-Optimized)
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'ga-hwaffmb0eqajfza5'
        slot-name: 'production'
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_GA }}
        package: cost-optimized-build
        
    - name: Cost Optimization Verification
      run: |
        echo "ðŸ’° Cost optimizations applied:"
        echo "  âœ“ Minimal dependency installation"
        echo "  âœ“ Optimized PM2 configuration"
        echo "  âœ“ Reduced package size"
        echo "  âœ“ Efficient resource utilization"
        echo "  âœ“ Smart caching strategies"
        
        # Test optimized deployment
        sleep 30
        curl -f https://ga-hwaffmb0eqajfza5.westeurope-01.azurewebsites.net || echo "Site warming up..."
