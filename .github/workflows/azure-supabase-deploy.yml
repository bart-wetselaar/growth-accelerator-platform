name: Azure Supabase Deployment
# New deployment strategy for Supabase architecture
# Deploys static frontend to Azure Static Web Apps with Supabase backend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_STATIC_WEB_APPS_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
  SUPABASE_URL: https://doulsumepjfihqowzheq.supabase.co
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy to Azure Static Web Apps
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
        lfs: false

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Create production build
      run: |
        echo "🚀 Creating Supabase-powered static build..."
        
        # Create build directory
        mkdir -p dist
        
        # Copy and configure the Supabase frontend
        cp growth-accelerator-supabase.html dist/index.html
        
        # Create additional static assets
        mkdir -p dist/static/css dist/static/js dist/static/img
        
        # Copy existing static assets if available
        if [ -d "static" ]; then
          cp -r static/* dist/static/ 2>/dev/null || true
        fi
        
        # Create a configuration file for runtime environment variables
        cat > dist/config.js << 'EOF'
        window.APP_CONFIG = {
          SUPABASE_URL: '${{ env.SUPABASE_URL }}',
          SUPABASE_ANON_KEY: '${{ env.SUPABASE_ANON_KEY }}',
          VERSION: '${{ github.sha }}',
          ENVIRONMENT: 'production'
        };
        EOF
        
        # Create a simple 404 page for SPA routing
        cat > dist/404.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Growth Accelerator Platform</title>
            <script>
                // SPA fallback - redirect to index.html
                window.location.href = '/';
            </script>
        </head>
        <body>
            <p>Redirecting to Growth Accelerator Platform...</p>
        </body>
        </html>
        EOF
        
        # Create robots.txt
        cat > dist/robots.txt << 'EOF'
        User-agent: *
        Allow: /
        Sitemap: https://white-coast-08429c303.1.azurestaticapps.net/sitemap.xml
        EOF
        
        # Create sitemap.xml
        cat > dist/sitemap.xml << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
          <url>
            <loc>https://white-coast-08429c303.1.azurestaticapps.net/</loc>
            <lastmod>$(date +%Y-%m-%d)</lastmod>
            <priority>1.0</priority>
          </url>
        </urlset>
        EOF
        
        # Create Azure Static Web Apps configuration
        mkdir -p dist/.vscode
        cat > dist/staticwebapp.config.json << 'EOF'
        {
          "routes": [
            {
              "route": "/api/*",
              "allowedRoles": ["anonymous", "authenticated"]
            },
            {
              "route": "/*",
              "serve": "/index.html",
              "statusCode": 200
            }
          ],
          "navigationFallback": {
            "rewrite": "/index.html",
            "exclude": ["/static/*.{css,js,jpg,png,gif}", "/*.{css,js,jpg,png,gif}"]
          },
          "mimeTypes": {
            ".json": "application/json",
            ".js": "application/javascript",
            ".css": "text/css"
          },
          "globalHeaders": {
            "Cache-Control": "public, max-age=31536000, immutable"
          },
          "responseOverrides": {
            "404": {
              "rewrite": "/404.html"
            }
          }
        }
        EOF
        
        echo "📦 Build complete. Contents:"
        find dist -type f -name "*.html" -o -name "*.js" -o -name "*.json" | head -20

    - name: Deploy to Azure Static Web Apps
      id: builddeploy
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "dist"
        output_location: ""
        skip_app_build: true

    - name: Create deployment summary
      if: success()
      run: |
        echo "✅ Supabase deployment successful!"
        echo ""
        echo "🌐 **Deployed URLs:**"
        echo "- Main: https://white-coast-08429c303.1.azurestaticapps.net"
        echo "- Alternative: https://thankful-moss-085e6bd03.1.azurestaticapps.net"
        echo ""
        echo "🗄️ **Backend:**"
        echo "- Supabase URL: ${{ env.SUPABASE_URL }}"
        echo "- Real-time: Enabled"
        echo "- Authentication: Configured"
        echo ""
        echo "🚀 **Architecture:**"
        echo "- Frontend: Azure Static Web Apps (Global CDN)"
        echo "- Backend: Supabase (Global Edge)"
        echo "- Database: PostgreSQL (Auto-scaling)"
        echo "- Functions: Deno Edge Runtime"
        echo ""
        echo "📋 **Next Steps:**"
        echo "1. Verify deployment at URLs above"
        echo "2. Test Supabase real-time features"
        echo "3. Deploy Edge Functions for Workable sync"
        echo "4. Configure custom domain if needed"

  cleanup-old-deployments:
    runs-on: ubuntu-latest
    name: Cleanup Legacy Flask Deployments
    if: success()
    needs: build-and-deploy
    
    steps:
    - name: Disable conflicting workflows
      run: |
        echo "🧹 Cleaning up legacy Flask deployment workflows..."
        echo "The following workflows should be disabled as they conflict with Supabase architecture:"
        echo "- growth-accelerator-azure-deploy.yml (Flask backend)"
        echo "- azure-deployment-bridge.yml (Flask bridge)"
        echo "- Any Python/Flask specific workflows"
        echo ""
        echo "✅ Supabase deployment is now the primary deployment method"
        echo "Legacy Flask workflows will remain disabled to prevent conflicts"